#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace OXCoder.DBModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="oxcoderdb")]
	public partial class OXProjectDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertox_project(ox_project instance);
    partial void Updateox_project(ox_project instance);
    partial void Deleteox_project(ox_project instance);
    #endregion
		
		public OXProjectDataContext() : 
				base(global::OXCoder.DBModel.Properties.Settings.Default.oxcoderdbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OXProjectDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OXProjectDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OXProjectDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OXProjectDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ox_project> ox_project
		{
			get
			{
				return this.GetTable<ox_project>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ox_project")]
	public partial class ox_project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _projectid;
		
		private string _description;
		
		private string _templatefile;
		
		private System.Nullable<int> _timelimit;
		
		private System.Nullable<int> _memorylimit;
		
		private System.Nullable<int> _difficulty;
		
		private string _tags;
		
		private string _type;
		
		private string _projectname;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectidChanging(string value);
    partial void OnprojectidChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OntemplatefileChanging(string value);
    partial void OntemplatefileChanged();
    partial void OntimelimitChanging(System.Nullable<int> value);
    partial void OntimelimitChanged();
    partial void OnmemorylimitChanging(System.Nullable<int> value);
    partial void OnmemorylimitChanged();
    partial void OndifficultyChanging(System.Nullable<int> value);
    partial void OndifficultyChanged();
    partial void OntagsChanging(string value);
    partial void OntagsChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnprojectnameChanging(string value);
    partial void OnprojectnameChanged();
    #endregion
		
		public ox_project()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectid", DbType="NChar(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string projectid
		{
			get
			{
				return this._projectid;
			}
			set
			{
				if ((this._projectid != value))
				{
					this.OnprojectidChanging(value);
					this.SendPropertyChanging();
					this._projectid = value;
					this.SendPropertyChanged("projectid");
					this.OnprojectidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_templatefile", DbType="NVarChar(MAX)")]
		public string templatefile
		{
			get
			{
				return this._templatefile;
			}
			set
			{
				if ((this._templatefile != value))
				{
					this.OntemplatefileChanging(value);
					this.SendPropertyChanging();
					this._templatefile = value;
					this.SendPropertyChanged("templatefile");
					this.OntemplatefileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timelimit", DbType="Int")]
		public System.Nullable<int> timelimit
		{
			get
			{
				return this._timelimit;
			}
			set
			{
				if ((this._timelimit != value))
				{
					this.OntimelimitChanging(value);
					this.SendPropertyChanging();
					this._timelimit = value;
					this.SendPropertyChanged("timelimit");
					this.OntimelimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memorylimit", DbType="Int")]
		public System.Nullable<int> memorylimit
		{
			get
			{
				return this._memorylimit;
			}
			set
			{
				if ((this._memorylimit != value))
				{
					this.OnmemorylimitChanging(value);
					this.SendPropertyChanging();
					this._memorylimit = value;
					this.SendPropertyChanged("memorylimit");
					this.OnmemorylimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_difficulty", DbType="Int")]
		public System.Nullable<int> difficulty
		{
			get
			{
				return this._difficulty;
			}
			set
			{
				if ((this._difficulty != value))
				{
					this.OndifficultyChanging(value);
					this.SendPropertyChanging();
					this._difficulty = value;
					this.SendPropertyChanged("difficulty");
					this.OndifficultyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tags", DbType="NVarChar(MAX)")]
		public string tags
		{
			get
			{
				return this._tags;
			}
			set
			{
				if ((this._tags != value))
				{
					this.OntagsChanging(value);
					this.SendPropertyChanging();
					this._tags = value;
					this.SendPropertyChanged("tags");
					this.OntagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(MAX)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectname", DbType="NVarChar(MAX)")]
		public string projectname
		{
			get
			{
				return this._projectname;
			}
			set
			{
				if ((this._projectname != value))
				{
					this.OnprojectnameChanging(value);
					this.SendPropertyChanging();
					this._projectname = value;
					this.SendPropertyChanged("projectname");
					this.OnprojectnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
